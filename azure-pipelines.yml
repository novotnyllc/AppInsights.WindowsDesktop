trigger:
- main
- rel/*

pr:
- main
- rel/*

variables: 
  BuildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

stages:
- stage: Build
  jobs:
  - job: Build
    pool: 
      vmImage: windows-2022

    variables: 
      BuildConfiguration: Release
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:
    - task: UseDotNet@2
      inputs:
        version: 6.x
        includePreviewVersions: true

    - task: DotNetCoreCLI@2  
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . nbgv
      displayName: Install NBGV tool

    - script: nbgv cloud
      displayName: Set Version

    - task: MSBuild@1
      displayName: Build Package
      inputs:
        solution: AppInsights.WindowsDesktop/AppInsights.WindowsDesktop.csproj 
        msbuildArguments: /restore /t:pack /p:NoPackageAnalysis=true /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)\Packages
        configuration: $(BuildConfiguration)
        maximumCpuCount: true

    - publish: $(Build.ArtifactStagingDirectory)\Packages
      displayName: Publish build packages
      artifact: BuildPackages

    - publish: config
      displayName: Publish signing config
      artifact: config


- stage: CodeSign
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest    
    environment: Code Sign - CI
    variables:
    - group: Sign Client Credentials
    strategy:
      runOnce:
        deploy:
          steps: 
          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . SignClient
            displayName: Install SignTool tool

          - pwsh: |
              .\SignClient "Sign" `
              --baseDirectory "$(Pipeline.Workspace)\BuildPackages" `
              --input "**/*.nupkg" `
              --config "$(Pipeline.Workspace)\config\signclient.json" `
              --user "$(SignClientUser)" `
              --secret "$(SignClientSecret)" `
              --name "AppInsights.WindowsDesktop" `
              --description "AppInsights.WindowsDesktop" `
              --descriptionUrl "https://github.com/novotnyllc/AppInsights.WindowsDesktop"
            displayName: Sign packages
              
          - publish: $(Pipeline.Workspace)/BuildPackages
            displayName: Publish Signed Packages
            artifact: SignedPackages